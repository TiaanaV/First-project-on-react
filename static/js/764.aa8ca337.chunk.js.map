{"version":3,"file":"static/js/764.aa8ca337.chunk.js","mappings":"8NACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAA2G,0BAA3G,EAAsJ,gCAAtJ,EAAmM,4BAAnM,EAA4O,4B,UCA5O,EAAyB,2BAAzB,EAAiE,+BAAjE,EAAyG,2BAAzG,EAA6I,2B,SCqB7I,EAlBmB,SAACA,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACE,gBAAKC,UAAWC,EAAhB,UACE,UAAC,KAAD,CACED,UAAW,SAACE,GAAD,OACTA,EAAQC,SAAWF,EAAiBA,CAD3B,EAGXG,GAAIN,EAJN,WAME,gBAAKE,UAAWC,EAAgBI,IAAKR,EAAMS,SAC1CT,EAAMU,SAId,ECnBD,EAA0B,yBAA1B,EAA4D,wBCW5D,EATgB,SAACV,GACf,OACE,iBAAKG,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAgBI,IAAKR,EAAMS,SAC1CT,EAAMW,UAGZ,E,qCCgBD,EApBuB,SAACX,GACtB,IAAMY,GAAcC,EAAAA,EAAAA,GAAiB,IAErC,OACE,iBAAMC,SAAUd,EAAMe,aAAtB,UACE,iBAAKZ,UAAWC,EAAhB,WACE,SAACY,EAAA,EAAD,CACEb,UAAWC,EACXa,UAAU,WACVC,UAAWC,EAAAA,EACXC,SAAU,CAACC,EAAAA,EAAUT,GACrBF,KAAM,iBACNY,YAAa,2BAEf,mBAAQnB,UAAWC,EAAnB,sBAIP,ECcD,EA/BgB,SAACJ,GACf,IAAIuB,EAAkBvB,EAAMwB,YAAYC,QAAQC,KAAI,SAACC,GAAD,OAClD,SAAC,EAAD,CACElB,OAAQkB,EAAOlB,OACfC,KAAMiB,EAAOjB,KACbR,GAAIyB,EAAOzB,IACNyB,EAAOzB,GALoC,IAQhD0B,EAAmB5B,EAAMwB,YAAYK,SAASH,KAAI,SAAC1B,GAAD,OACpD,SAAC,EAAD,CACEW,QAASX,EAAMW,QACfmB,OAAQ9B,EAAM8B,OACdrB,OAAQT,EAAMS,QACTT,EAAME,GALuC,IAatD,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SAAuCmB,KACvC,gBAAKpB,UAAWC,EAAhB,SAAmCwB,KACnC,SAACG,EAAD,CAAqBjB,SARH,SAACkB,GACrBhC,EAAMiC,YAAYD,EAAOE,eAC1B,MASF,EAIYH,GAAsBI,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAlBD,CACjCE,GChBF,GALyBC,EAAAA,EAAAA,KACvBC,EAAAA,EAAAA,KAfoB,SAACC,GACrB,MAAO,CACLhB,YAAagB,EAAMhB,YAEtB,IAEwB,SAACiB,GACxB,MAAO,CACLR,YAAa,SAACC,GACZO,GAASC,EAAAA,EAAAA,GAAyBR,GACnC,EAEJ,IAICS,EAAAA,EAFuBL,CAGvBM,E,mJCnBEC,EAA6B,SAACL,GAAD,MAAY,CACzCM,OAAQN,EAAMO,KAAKD,OADU,EAKpBH,EAAmB,SAACK,GAAe,IAEtCC,EAFqC,0IAGvC,WACI,OAAKC,KAAKlD,MAAM8C,QACT,SAACE,GAAD,UAAeE,KAAKlD,SADI,SAAC,KAAD,CAAUO,GAAI,UAEhD,KANsC,GAEX4C,EAAAA,WAUhC,OAHqCZ,EAAAA,EAAAA,IAAQM,EAARN,CACjCU,EAGP,C","sources":["webpack://first-project-on-reack/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://first-project-on-reack/./src/components/Dialogs/DIalogsItem/DialogItem.module.css?e746","components/Dialogs/DIalogsItem/DialogItem.jsx","webpack://first-project-on-reack/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"dialogsItems\":\"Dialogs_dialogsItems__zeEWD\",\"messages\":\"Dialogs_messages__Cg2l+\",\"newMessageArea\":\"Dialogs_newMessageArea__bp4hI\",\"newMessage\":\"Dialogs_newMessage__whKBA\",\"buttonSend\":\"Dialogs_buttonSend__VGc8d\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__45591\",\"dialogLink\":\"DialogItem_dialogLink__9P7Nv\",\"active\":\"DialogItem_active__4-cSQ\",\"avatar\":\"DialogItem_avatar__0ngf-\"};","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./DialogItem.module.css\";\n\nconst DialogItem = (props) => {\n  let path = \"/dialogs/\" + props.id;\n\n  return (\n    <div className={classes.dialog}>\n      <NavLink\n        className={(element) =>\n          element.isActive ? classes.active : classes.dialogLink\n        }\n        to={path}\n      >\n        <img className={classes.avatar} src={props.avatar} />\n        {props.name}\n      </NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Message_message__rjHQQ\",\"avatar\":\"Message_avatar__BcHJo\"};","import React from \"react\";\nimport classes from \"./Message.module.css\";\n\nconst Message = (props) => {\n  return (\n    <div className={classes.message}>\n      <img className={classes.avatar} src={props.avatar} />\n      {props.message}\n    </div>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport classes from \"./Dialogs.module.css\";\nimport { Field } from \"redux-form\";\nimport { Forms } from \"../common/FormsControl/FormsControl\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validator\";\n\nconst AddMessageForm = (props) => {\n  const maxLength50 = maxLengthCreator(50);\n\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div className={classes.newMessageArea}>\n        <Field\n          className={classes.newMessage}\n          typeField=\"textarea\"\n          component={Forms}\n          validate={[required, maxLength50]}\n          name={\"newMessageBody\"}\n          placeholder={\"Enter your message...\"}\n        />\n        <button className={classes.buttonSend}>Send</button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddMessageForm;\n","import React from \"react\";\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DIalogsItem/DialogItem\";\nimport Message from \"../Dialogs/Message/Message\";\nimport { reduxForm } from \"redux-form\";\nimport AddMessageForm from \"./AddMessageForm\";\n\nconst Dialogs = (props) => {\n  let dialogsElements = props.dialogsPage.dialogs.map((dialog) => (\n    <DialogItem\n      avatar={dialog.avatar}\n      name={dialog.name}\n      id={dialog.id}\n      key={dialog.id}\n    />\n  ));\n  let messagesElements = props.dialogsPage.messages.map((props) => (\n    <Message\n      message={props.message}\n      writer={props.writer}\n      avatar={props.avatar}\n      key={props.id}\n    />\n  ));\n\n  const addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  return (\n    <div className={classes.dialogs}>\n      <div className={classes.dialogsItems}>{dialogsElements}</div>\n      <div className={classes.messages}>{messagesElements}</div>\n      <AddMessageFormRedux onSubmit={addNewMessage} />\n    </div>\n  );\n};\n\nexport default Dialogs;\n\nexport const AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\n  AddMessageForm\n);\n","import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport { sendMessageActionCreator } from \"../../redux/dialogsReducer\";\nimport Dialogs from \"./Dialogs\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageActionCreator(newMessageBody));\n    },\n  };\n};\n\nconst DialogsContainer = compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withAuthRedirect\n)(Dialogs);\n\nexport default DialogsContainer;\n","import React from \"react\";\nimport { Navigate } from \"react-router\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth,\n  });\n\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component{\n        render(){\n            if (!this.props.isAuth) return <Navigate to={\"/login\"} />;\n            return <Component {...this.props} />;\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(\n        RedirectComponent \n      );\n    return ConnectedAuthRedirectComponent\n}\n"],"names":["props","path","id","className","classes","element","isActive","to","src","avatar","name","message","maxLength50","maxLengthCreator","onSubmit","handleSubmit","Field","typeField","component","Forms","validate","required","placeholder","dialogsElements","dialogsPage","dialogs","map","dialog","messagesElements","messages","writer","AddMessageFormRedux","values","sendMessage","newMessageBody","reduxForm","form","AddMessageForm","compose","connect","state","dispatch","sendMessageActionCreator","withAuthRedirect","Dialogs","mapStateToPropsForRedirect","isAuth","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}